[gd_scene load_steps=6 format=3 uid="uid://0m4uo7h6fjvd"]

[ext_resource type="Script" path="res://RootNode.gd" id="1_gmxlx"]
[ext_resource type="Script" path="res://DrawScript.gd" id="2_errqw"]

[sub_resource type="GDScript" id="GDScript_li0a8"]
script/source = "extends Node2D


@onready var reviewLabel : RichTextLabel= $ReviewLabel 
@onready var reviewButton : Button= $ReviewButton


const  IMAGE_PATH : String = \"user://userDrawing.png\"



func retrieveReview():
	
	var file = FileAccess.open(IMAGE_PATH, FileAccess.READ)
	# User image mage loaded as byte data
	var imgBytes: PackedByteArray = file.get_buffer(file.get_length())
	file.close()
	
	
	# Will submit the image to the python backend using multipart form data, constructing the following below
	# Add randomized boundary string to sepeate compnents of the request
	var boundary = \"----GodotBoundary%04d\" % randi()

	
	var body = PackedByteArray()
	
	body.append_array((\"--%s\\r\\n\" % boundary).to_utf8_buffer())
	# Boundary 
	body.append_array((\"Content-Disposition: form-data; name=\\\"image\\\"; filename=\\\"drawing.png\\\"\\r\\n\").to_utf8_buffer())
	# Content-Disposition : - Indicates to the server to interpret data as file
	body.append_array((\"Content-Type: image/png\\r\\n\\r\\n\").to_utf8_buffer())
	# Content-Type : - Self explanatory
	body.append_array(imgBytes)
	# Data
	body.append_array((\"\\r\\n--%s--\\r\\n\" % boundary).to_utf8_buffer())
	# Boundary 

	# Header requires its on Content-Type
	var headers = PackedStringArray()
	headers.append(\"Content-Type: multipart/form-data; boundary=%s\" % boundary)
	

	# Send the request
	var http = $HTTPRequest
	var error = http.request_raw(
			\"http://localhost:5000/review\",
			headers,
			HTTPClient.METHOD_POST,
			body                          
	)
	# Check for error
	if error != OK:
		reviewLabel.text = \"Could not send request (err %d)\" % error

	
func httpRequestCompleted(result, response_code, headers, body) -> void :
	#Connected by HTTPRequest Node, when async request completes, callback runs
	
	
	reviewButton.disabled = false
	
	#Print error if problem occurs
	if response_code != 200:
		reviewLabel.text = \"Review failed.\"
		print(\"Error:\", body.get_string_from_utf8())
		return
	# Convert to string from byte data
	var json = JSON.parse_string(body.get_string_from_utf8())
	if json:
		reviewLabel.text = json.review
	else:
		reviewLabel.text = \"Invalid JSON response.\"
func reviewButtonPressed() -> void:
	reviewLabel.text = \"Loading...\"
	#Disabling the button as the review generates to prevent button spamming and server overload
	reviewButton.disabled = true
	retrieveReview()
	
		
"

[sub_resource type="CanvasItemMaterial" id="CanvasItemMaterial_x3tfj"]

[sub_resource type="ViewportTexture" id="ViewportTexture_4mfiv"]
viewport_path = NodePath("DrawingViewport")

[node name="RootNode" type="Node2D"]
script = ExtResource("1_gmxlx")

[node name="DrawingSender" type="Node2D" parent="."]
script = SubResource("GDScript_li0a8")

[node name="ReviewButton" type="Button" parent="DrawingSender"]
offset_left = 873.0
offset_top = 315.0
offset_right = 936.0
offset_bottom = 346.0
text = "Review"
metadata/_edit_use_anchors_ = true

[node name="HTTPRequest" type="HTTPRequest" parent="DrawingSender"]

[node name="ReviewLabel" type="RichTextLabel" parent="DrawingSender"]
offset_left = 1019.0
offset_top = 20.0
offset_right = 1547.0
offset_bottom = 1158.0

[node name="DrawingViewport" type="SubViewport" parent="."]
size = Vector2i(800, 800)

[node name="WhiteScreen" type="ColorRect" parent="DrawingViewport"]
offset_right = 797.0
offset_bottom = 797.0

[node name="DrawNode" type="Node2D" parent="DrawingViewport"]
script = ExtResource("2_errqw")

[node name="DrawingBoard" type="TextureRect" parent="."]
material = SubResource("CanvasItemMaterial_x3tfj")
offset_left = -1.0
offset_top = 1.0
offset_right = 799.0
offset_bottom = 801.0
texture = SubResource("ViewportTexture_4mfiv")

[node name="ClearButton" type="Button" parent="."]
offset_left = 862.0
offset_top = 418.0
offset_right = 955.0
offset_bottom = 463.0
text = "Clear"

[node name="SaveButton" type="Button" parent="."]
offset_left = 863.0
offset_top = 361.0
offset_right = 952.0
offset_bottom = 401.0
text = "Save "
metadata/_edit_use_anchors_ = true

[connection signal="pressed" from="DrawingSender/ReviewButton" to="DrawingSender" method="reviewButtonPressed"]
[connection signal="request_completed" from="DrawingSender/HTTPRequest" to="DrawingSender" method="httpRequestCompleted"]
[connection signal="pressed" from="ClearButton" to="DrawingViewport/DrawNode" method="clearDrawing"]
[connection signal="pressed" from="SaveButton" to="." method="saveDrawing"]
